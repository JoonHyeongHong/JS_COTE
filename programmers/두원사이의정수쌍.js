/*
x축과 y축으로 이루어진 2차원 직교 좌표계에 중심이 원점인 서로 다른 크기의 원이 두 개 주어집니다. 반지름을 나타내는 두 정수 r1, r2가 매개변수로 주어질 때, 두 원 사이의 공간에 x좌표와 y좌표가 모두 정수인 점의 개수를 return하도록 solution 함수를 완성해주세요.
※ 각 원 위의 점도 포함하여 셉니다.
*/

function solution(r1, r2) {
  // 시간복잡도 O(N)을 만족하기 위해서는 두 좌표가 아닌, 하나의 좌표만을 가지고 계산해야한다.
  //따라서 2차원 작교 좌표계를 넷으로 쪼개 하나의 사분면만을 다룬 뒤 4를 곱해줄 것이다.
  // 총 원 안에 점 갯수
  let answer = 0;

  //x가 1부터 시작하는 이유는, 정확히 넷으로 나누기 위해서는
  //x축을 두 사분면이 가지고, y축을 다른 두 사분면이 가져야 정확히 나눠지기 때문이다.
  //그래서 1부터 r2까지이다.
  for (let x = 1; x <= r2; x++) {
    //y1는 x^2 + y^2 <= r2 ^ 2 를 만족하는 y의 최대값이다

    const y1 = Math.floor(Math.sqrt(r2 ** 2 - x ** 2));

    //만약 x가 r1보다 크거나 같다면, 그 이후부터는 y2의 값이 0부터 시작한다.
    //y2는 x^2 + y^2 >= r1 ^ 2를 만족하는 y의 최소값이다
    const y2 = x >= r1 ? 0 : Math.ceil(Math.sqrt(r1 ** 2 - x ** 2));
    //y1과 y2가 같은 경우를 시작으로, 기본적으로 좌표 1개는 가져가기 때문에 +1을 해주었다.
    answer += y1 - y2 + 1;
  }

  // 각 사분면을 4개로 쪼갰었기 때문에 * 4 해준다
  return answer * 4;
}
